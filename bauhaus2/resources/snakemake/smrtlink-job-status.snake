class JobStatus(object):
    VALID_STATES = ("CREATED", "SUBMITTED", "RUNNING", "TERMINATED", "SUCCESSFUL", "FAILED", "UNKNOWN")
    FAILED_STATES = ("TERMINATED", "FAILED", "UNKNOWN")
    SUCCESS_STATES = ("SUCCESSFUL",)

def extractJobId(launchJson):
    import json
    with open(launchJson) as data_file:    
        data = json.load(data_file)
    ms = data["id"]
    if ms:
        return ms
    else:
        raise ValueError("Cannot find job ID in pbservice.json")

def extractJobStatus(pollJson):
    import json
    with open(pollJson) as data_file:    
        data = json.load(data_file)
    m = data["state"]
    if not m or m not in JobStatus.VALID_STATES:
        raise ValueError("Cannot find valid job status in poll.json")
    else:
        return m

def extractJobPath(launchJson):
    import json
    with open(launchJson) as data_file:    
        data = json.load(data_file)
    m = data["path"]
    if not m:
        raise ValueError("Cannot find SMRTLink job path in pbservice.json")
    else:
        return m

def touchFile(fname):
    open(fname, "a").close()