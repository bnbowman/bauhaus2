
# ---------------------------------------------------------------------------------------------------
# constant-arrow.snake: fit constant arrow model, generating csv file of errormode,
# and make Fishbone plots using the csv file.

mapped_subreads = \
    { c : expand("conditions/{condition}/mapped/mapped.alignmentset.xml", condition=c)
      for c in ct.conditions }

uid_tag_csv_file = "reports/uidTag.csv"

# -- Target rules --

rule constant_arrow_plots:
    input:
        constantArrowPlots = "reports/ConstantArrowFishbonePlots/report.json"

rule ConstantArrowPlots:
    input: "reports/ConstantArrowFishbonePlots/errormode.csv",
           uid_tag_csv_file
    output: "reports/ConstantArrowFishbonePlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/FishbonePlots.R
        """

rule MakeMappingMetricsCsv:
    input: 
        asets = mapped_subreads.values(),
        arrow_csv = "reports/ConstantArrowFishbonePlots/errormode.csv"
    output: metrics_csv = "reports/ConstantArrowFishbonePlots/mapped-metrics.csv"
    shell:
        """
        python scripts/Python/MakeMappingMetricsCsv.py --asets {input.asets} --arrow-csv {input.arrow_csv} --output {output.metrics_csv}
        """