
# ---------------------------------------------------------------------------------------------------
# detect-missing-adapters.snake: Detect missing adapters.

mapped_subreads = \
    { c : expand("conditions/{condition}/subreads/input.subreadset.xml", condition=c)
      for c in ct.conditions }

local_fasta_files = \
    { c : expand("conditions/{condition}/reference.fasta", condition=c)
      for c in ct.conditions }
      
missing_adapter_reports = \
    { c : expand("reports/MissingAdapter/{condition}/missing_adapter.csv", condition=c)
      for c in ct.conditions }

# -- Target rules --

rule missing_adapter_reports:
    input:
        MissingAdapterReports=missing_adapter_reports.values(),

rule collect_bam_file:
    input:
        xml="conditions/{condition}/subreads/input.subreadset.xml"
    output:
        bam="conditions/{condition}/subreads/input.bam",
        pbi="conditions/{condition}/subreads/input.bam.pbi",
    shell:
        """
        module load xpath
        xml={input.xml}
        bam="$(xpath -q -e '(//pbbase:ExternalResource[@MetaType="PacBio.SubreadFile.SubreadBamFile"]/@ResourceId)[1]' $xml | awk -F '[""]' '{{print $2}}')"
        ln -s $bam {output.bam}
        bam+=".pbi"
        ln -s $bam {output.pbi}
        """

rule missing_adapter_reports_one_condition:
    input: subreadset="conditions/{condition}/subreads/input.bam",
           reference="conditions/{condition}/reference.fasta"
    output: "reports/MissingAdapter/{condition}/missing_adapter.csv"
    shell:
        """
        module load pbqctools
        pbQcAdapters --zia=missing_adapter.csv --adapterReport=missing_adapter.txt --sampleSize="all" {input.reference} {input.subreadset}
        """