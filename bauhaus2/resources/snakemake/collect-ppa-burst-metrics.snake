
# ---------------------------------------------------------------------------------------------------
# collect-ppa-burst-metrics.snake: collect ppa-classified bursts, if available.

subreadsets = \
    { c : "conditions/{condition}/subreads/input.subreadset.xml".format(condition=c)
      for c in ct.conditions }

burst_metrics_csv_files = \
    { c : "conditions/{condition}/subreads/ppa_burst_metrics.csv".format(condition=c)
      for c in ct.conditions }

rule collect_ppa_burst_metrics:
	input:
		BurstPlots="reports/BurstPlots/report.json"


rule BurstPlots:
    input: subreadsets.values(),
           burst_metrics_csv_files.values()
    output: "reports/BurstPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/BurstPlots.R
        """

rule collect_ppa_bursts:
	input: "conditions/{condition}/subreads/input.subreadset.xml"
	output: bursts="conditions/{condition}/subreads/ppa_burst_metrics.csv",
			reads="conditions/{condition}/subreads/read_metrics.csv"
	shell:
		"""
		export MODULEPATH=/pbi/dept/itg/modulefiles:$MODULEPATH
		module add biochemistry-toolkit/zia
		python scripts/Python/CollectPpaBurstMetrics.py {input} {output.bursts} {output.reads}
		"""