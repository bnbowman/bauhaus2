
# ---------------------------------------------------------------------------------------------------
# summarize-mappings.snake: analyze mapping results, generating plots and tables.

mapped_subreads = \
    { c : expand("conditions/{condition}/mapped/mapped.alignmentset.xml", condition=c)
      for c in ct.conditions }

local_fasta_files = \
    { c : expand("conditions/{condition}/reference.fasta", condition=c)
      for c in ct.conditions }

# -- Target rules --

rule summarize_mappings:
    input:
        pbiPlots="reports/PbiPlots/report.json",
        pbiSampledPlots="reports/PbiSampledPlots/report.json",
        libDiagnosticPlots="reports/LibDiagnosticPlots/report.json",
        readPlots="reports/ReadPlots/report.json",
        constantArrowPlots="reports/ConstantArrowFishbonePlots/report.json",
        makeMappingMetricsCsv = "reports/ConstantArrowFishbonePlots/mapped-metrics.csv",
        FindNumberOfReferences = expand("conditions/{condition}/mapped/refNo.txt", condition=ct.conditions),
        ZMWstsPlots="reports/ZMWstsPlots/report.json",
        AlignmentBasedHeatmaps="reports/AlignmentBasedHeatmaps/report.json"

rule PbiPlots:
    input: mapped_subreads.values(),
           local_fasta_files.values()
    output: "reports/PbiPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/PbiPlots.R
        """

rule PbiSampledPlots:
    input: mapped_subreads.values(),
           local_fasta_files.values()
    output: "reports/PbiSampledPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/PbiSampledPlots.R
        """

rule LibDiagnosticPlots:
    input: mapped_subreads.values(),
           local_fasta_files.values()
    output: "reports/LibDiagnosticPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/LibDiagnosticPlots.R
        """

rule ReadPlots:
    input: mapped_subreads.values(),
           local_fasta_files.values()
    output: "reports/ReadPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/ReadPlots.R
        """

rule ZMWstsPlots:
    input: mapped_subreads.values(),
           local_fasta_files.values()
    output: "reports/ZMWstsPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/ZMWstsPlots.R
        """
        
rule AlignmentBasedHeatmaps:
    input: mapped_subreads.values(),
           local_fasta_files.values()
    output: "reports/AlignmentBasedHeatmaps/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/AlignmentBasedHeatmaps.R
        """