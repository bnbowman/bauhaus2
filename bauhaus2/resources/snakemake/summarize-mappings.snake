
# ---------------------------------------------------------------------------------------------------
# summarize-mappings.snake: analyze mapping results, generating plots and tables.

mapped_subreads = \
    { c : expand("conditions/{condition}/mapped/mapped.alignmentset.xml", condition=c)
      for c in ct.conditions }

local_fasta_files = \
    { c : expand("conditions/{condition}/reference.fasta", condition=c)
      for c in ct.conditions }

uid_tag_csv_file = "reports/uidTag.csv"

uid_tag_address = "http://confluence.nanofluidics.com:8090/display/ITG/Zia+Plot+Index"

# -- Target rules --

rule summarize_mappings:
    input:
        pbiPlots="reports/PbiPlots/report.json",
        pbiSampledPlots="reports/PbiSampledPlots/report.json",
        libDiagnosticPlots="reports/LibDiagnosticPlots/report.json",
        readPlots="reports/ReadPlots/report.json",
        constantArrowPlots="reports/ConstantArrowFishbonePlots/report.json",
        makeMappingMetricsCsv = "reports/ConstantArrowFishbonePlots/mapped-metrics.csv",
        ZMWstsPlots="reports/ZMWstsPlots/report.json",
        AlignmentBasedHeatmaps="reports/AlignmentBasedHeatmaps/report.json",
        LocAccPlots="reports/LocAccPlots/report.json"

rule PbiPlots:
    input: mapped_subreads.values(),
           local_fasta_files.values(),
           uid_tag_csv_file
    output: "reports/PbiPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/PbiPlots.R
        """

rule PbiSampledPlots:
    input: mapped_subreads.values(),
           local_fasta_files.values(),
           uid_tag_csv_file
    output: "reports/PbiSampledPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/PbiSampledPlots.R
        """

rule LibDiagnosticPlots:
    input: mapped_subreads.values(),
           local_fasta_files.values(),
           uid_tag_csv_file
    output: "reports/LibDiagnosticPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/LibDiagnosticPlots.R
        """

rule ReadPlots:
    input: mapped_subreads.values(),
           local_fasta_files.values(),
           uid_tag_csv_file
    output: "reports/ReadPlots/report.json"
    shell:
        """
        Rscript --vanilla scripts/R/ReadPlots.R
        """
        
rule uidTagCSV:
    output: csv = uid_tag_csv_file
    shell:
        """
        module load anaconda
        python scripts/Python/GetZiaTags.py {uid_tag_address} {output.csv}
        """