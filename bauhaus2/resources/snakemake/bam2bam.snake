
def getInputs(wc):
    # XXX nohq library mappings aren't possible with blasr >:[
    if (hasattr(ct, 'callAdapters') and hasattr(ct, 'HQRF')
            and ct.callAdapters(wc.condition) and not ct.HQRF(wc.condition)):
        return expand(
            "conditions/{condition}/subreads-nohq/input.subreadset.xml",
            condition=ct.conditions)
    else:
        return expand("conditions/{condition}/subreads/input.subreadset.xml",
                      condition=ct.conditions)

def getInput(wc):
    # XXX nohq library mappings aren't possible with blasr >:[
    if (hasattr(ct, 'callAdapters') and hasattr(ct, 'HQRF')
            and ct.callAdapters(wc.condition) and not ct.HQRF(wc.condition)):
        return 'conditions/{condition}/subreads-nohq/input.subreadset.xml'
    else:
        return 'conditions/{condition}/subreads/input.subreadset.xml'

def lookupInput(wc):
    return getInput(wc).format(condition=wc.condition)

rule nohq:
    input: 'conditions/{condition}/subreads/input.subreadset.xml'
    output: 'conditions/{condition}/subreads-nohq/input.subreadset.xml'
    params:
        module=lambda wc: ct.ppaModule(wc.condition),
        prefix="conditions/{condition}/subreads-nohq/input",
        subreads='conditions/{condition}/subreads/input.subreads.bam',
        scraps='conditions/{condition}/subreads/input.scraps.bam'
    shell:
        """
        module purge
        module load {params.module}
        bam2bam -o {params.prefix} --fullHQ {params.subreads} {params.scraps}
        """
