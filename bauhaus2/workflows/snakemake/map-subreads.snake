
# ---------------------------------------------------------------------------------------------------
# map-subreads.snake: map (scattered) subreads and merge the resulting alignmentsets into one.

mapped_chunks = \
    { c : expand("conditions/{condition}/mapped_chunks/mapped.chunk{chunkNo}.alignmentset.xml",
                 condition =c, chunkNo=range(config["bh2.scatter_subreads.chunks_per_condition"]))
      for c in ct.conditions }

gathered_mapped_chunks = \
    { c : expand("conditions/{condition}/mapped/mapped.alignmentset.xml", condition=c)
      for c in ct.conditions }

# -- Target rules --

rule map_subreads:
    input: gathered_mapped_chunks.values()

rule map_chunked_subreads:
    input: flatten(mapped_chunks.values())

# -- Worker rules --

rule map_chunked_subreads_one_chunk:
    input:
        subreads="conditions/{condition}/subreads_chunks/input.chunk{chunkNo}.subreadset.xml",
        reference="conditions/{condition}/reference.fasta"
    output: "conditions/{condition}/mapped_chunks/mapped.chunk{chunkNo}.alignmentset.xml"
    threads: 8
    shell:
        """
        pbalign --tmpDir=/scratch --nproc {threads} {input.subreads} {input.reference} {output}
        """

rule map_chunked_subreads_and_gather_one_condition:
    input: lambda wc: mapped_chunks[wc.condition]
    output: "conditions/{condition}/mapped/mapped.alignmentset.xml"
    shell:
        """
        dataset merge {output} {input}
        """
